import React, { useEffect } from "react";
import './Technology.css'
import Aos from 'aos'

const Technology = () => {
    useEffect (() => {
        Aos.init({ duration: 100 })
    }, [])
    return (
        <bottom   data-aos="flip-right"
                  data-aos-offset="0"
                  data-aos-delay="50"
                  data-aos-duration="300"
                  data-aos-easing="ease-in-out"
                  data-aos-mirror="true"
                  data-aos-once="false"
                  data-aos-anchor-placement="top-center" className='Technology'>
            <div className='text2' >

                <div className='block2'>
                    <div className='infoProject'>
                        <h3>Приминяемые технологии</h3><br/>
                        <p>Специализация применяемых технологий основывается на двух современных языках програмирования:</p>
                                <br/>
                            <li> React.js - frontend </li>
                            <li>Node.js - backend</li>
                                <br/>
                        <div> В наши дни платформа Node.js является одной из самых популярных платформ для построения эффективных и масштабируемых REST API's. Она так же подходит для построения гибридных мобильных приложений, десктопных программ и даже для IoT.</div><br/>
                        1. Time&Material
                        <li> Проект разбивается на задачи, каждую из которых команда оценивает отдельно, так что у вас есть возможность вносить любые дополнения в ходе работ. Когда задача выполнена и вам предоставлен видимый результат — вы оплачиваете работу команды (оплата может происходить сразу после спринта, ежемесячно, раз в квартал и т.д. — как вам удобно). Эта модель идеально подходит для реализации MVP или проектов, которые могут поменяться в зависимости от специфики рынка. Релиз и тестирование проекта происходит по окончании каждого этапа.</li>
                        <br/>
                        <h4>Гибкость реализации</h4>

                        <li>
                            Можно вносить изменения в техническое задание во время реализации проекта</li>
                        <h4>Срочность старта</h4>
                        <li>Можно начинать без составления сложного технического задания и полного проекта</li>
                        <h4>Удобство взаимодействия</h4>
                        <li>Заказчик и руководитель проекта глубоко вовлечены в процесс реализации</li>
                        <h4>Оптимизация стоимости</h4>
                        <li>Стоимость проекта меняется как в большую, так и в меньшую сторону по мере внесения изменений в план реализации</li>
                        <h4>Прозрачность работы</h4>
                        <li>Оплата производится по факту за конкретно выполненные работы</li>
                        <br/>
                        2. Fixed Price
                        <li>Модель предполагает, что бюджет на разработку всего проекта и его Техническое Задание утверждается перед стартом работ и остается неизменным. Также перед началом работ утверждается точный календарный срок сдачи проекта, который основывается на Техническом Задании. Таким образом, вы точно знаете стоимость и сроки проекта, но не сможете внести изменения по ходу разработки. Релиз и тестирование проекта происходит по окончании всех работ.</li>
                    </div>
                </div>


            </div>
        </bottom>
    )
}
export default Technology;